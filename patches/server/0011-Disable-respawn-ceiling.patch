From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 404Setup <153366651+404Setup@users.noreply.github.com>
Date: Sun, 18 Aug 2024 18:07:24 +0800
Subject: [PATCH] Disable respawn ceiling

This feature is not yet complete, but no major bugs have been found.

Note that you should set spawnRadius to at least 1, not 0, and the spawn point range should be at least 3*3 (or more)

diff --git a/src/main/java/net/minecraft/server/level/PlayerRespawnLogic.java b/src/main/java/net/minecraft/server/level/PlayerRespawnLogic.java
index e1ee330b6fdd43114a1330677b1597bf437c1ed5..4f9cca4c58a06cfd1d6c94c3e3fc67059ef696e4 100644
--- a/src/main/java/net/minecraft/server/level/PlayerRespawnLogic.java
+++ b/src/main/java/net/minecraft/server/level/PlayerRespawnLogic.java
@@ -11,20 +11,21 @@ import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.LevelChunk;
 import net.minecraft.world.level.levelgen.Heightmap;
 import io.multipaper.shreddedpaper.region.RegionPos;
+import org.bukkit.World;
 
 public class PlayerRespawnLogic {
     @Nullable
     protected static BlockPos getOverworldRespawnPos(ServerLevel world, int x, int z) {
         boolean bl = world.dimensionType().hasCeiling();
         LevelChunk levelChunk = world.getChunk(SectionPos.blockToSectionCoord(x), SectionPos.blockToSectionCoord(z));
-        int i = bl ? world.getChunkSource().getGenerator().getSpawnHeight(world) : levelChunk.getHeight(Heightmap.Types.MOTION_BLOCKING, x & 15, z & 15);
-        if (i < world.getMinBuildHeight()) {
+        // Vine start - disableRespawnCeiling
+        boolean disableRespawnCeiling = one.tranic.vine.config.VineConfig.Feature.disableRespawnCeiling && (world.getWorld().getEnvironment() != World.Environment.NETHER && world.getWorld().getEnvironment() != World.Environment.THE_END);
+        int i = bl ? world.getChunkSource().getGenerator().getSpawnHeight(world) : (disableRespawnCeiling ? world.levelData.getSpawnPos().getY() : levelChunk.getHeight(Heightmap.Types.MOTION_BLOCKING, x & 15, z & 15));
+        if (i >= world.getMinBuildHeight()) {
             return null;
         } else {
             int j = levelChunk.getHeight(Heightmap.Types.WORLD_SURFACE, x & 15, z & 15);
-            if (j <= i && j > levelChunk.getHeight(Heightmap.Types.OCEAN_FLOOR, x & 15, z & 15)) {
-                return null;
-            } else {
+            if (j > i || j <= levelChunk.getHeight(Heightmap.Types.OCEAN_FLOOR, x & 15, z & 15)) {
                 BlockPos.MutableBlockPos mutableBlockPos = new BlockPos.MutableBlockPos();
 
                 for (int k = i + 1; k >= world.getMinBuildHeight(); k--) {
@@ -42,6 +43,8 @@ public class PlayerRespawnLogic {
                 return null;
             }
         }
+        return null;
+        // Vine end - disableRespawnCeiling
     }
 
     @Nullable
