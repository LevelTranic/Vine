From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrPowerGamerBR <git@mrpowergamerbr.com>
Date: Wed, 22 Nov 2023 14:40:36 -0300
Subject: [PATCH] SparklyPaper: Skip dirty stats copy when requesting player
 stats

There's literally only one getDirty call. Because the map was only retrieved once, we don't actually need to create a copy of the map just to iterate it, we can just access it directly and clear it manually after use.

diff --git a/src/main/java/net/minecraft/stats/ServerStatsCounter.java b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
index f890738d3bb9fb5e70a9d323c6cec97f9948f9cf..99e4961d86d2a0c7acc3e4ca2b3cf4b2259a5480 100644
--- a/src/main/java/net/minecraft/stats/ServerStatsCounter.java
+++ b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
@@ -90,12 +90,13 @@ public class ServerStatsCounter extends StatsCounter {
         this.dirty.add(stat);
     }
 
+    /* SparklyPaper start - Skip dirty stats copy when requesting player stats
     private Set<Stat<?>> getDirty() {
         Set<Stat<?>> set = Sets.newHashSet(this.dirty);
 
         this.dirty.clear();
         return set;
-    }
+    } SparklyPaper end */
 
     public void parseLocal(DataFixer dataFixer, String json) {
         try {
@@ -242,15 +243,14 @@ public class ServerStatsCounter extends StatsCounter {
     }
 
     public void sendStats(ServerPlayer player) {
-        Object2IntMap<Stat<?>> object2intmap = new Object2IntOpenHashMap();
-        Iterator iterator = this.getDirty().iterator();
-
-        while (iterator.hasNext()) {
-            Stat<?> statistic = (Stat) iterator.next();
-
-            object2intmap.put(statistic, this.getValue(statistic));
+        Object2IntMap<Stat<?>> object2intmap = new Object2IntOpenHashMap<>();
+        // SparklyPaper - Skip dirty stats copy when requesting player stats
+        for (Stat<?> stat : this.dirty) {
+            object2intmap.put(stat, this.getValue(stat));
         }
 
+        this.dirty.clear(); // SparklyPaper - Skip dirty stats copy when requesting player stats
+
         player.connection.send(new ClientboundAwardStatsPacket(object2intmap));
     }
 }
