From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Tue, 29 Aug 2023 22:29:08 +0200
Subject: [PATCH] Gale: Faster floating-point positive modulo

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Gale - https://galemc.org

AND https://github.com/Dreeam-qwq/Gale

diff --git a/src/main/java/net/minecraft/util/Mth.java b/src/main/java/net/minecraft/util/Mth.java
index 90e6d6aafc8735b192a558d65665ec7ab61b36b4..7d25160c3eaf7c60d1f186aedc66e67ba9a279b5 100644
--- a/src/main/java/net/minecraft/util/Mth.java
+++ b/src/main/java/net/minecraft/util/Mth.java
@@ -157,6 +157,18 @@ public class Mth {
         return (dividend % divisor + divisor) % divisor;
     }
 
+    // Gale start - faster floating-point positive modulo
+    public static float positiveModuloForPositiveIntegerDivisor(float dividend, float divisor) {
+        var modulo = dividend % divisor;
+        return modulo < 0 ? modulo + divisor : modulo;
+    }
+
+    public static double positiveModuloForPositiveIntegerDivisor(double dividend, double divisor) {
+        var modulo = dividend % divisor;
+        return modulo < 0 ? modulo + divisor : modulo;
+    }
+    // Gale end - faster floating-point positive modulo
+
     public static boolean isMultipleOf(int a, int b) {
         return a % b == 0;
     }
diff --git a/src/main/java/net/minecraft/world/level/levelgen/blending/Blender.java b/src/main/java/net/minecraft/world/level/levelgen/blending/Blender.java
index ef73772bd3f9484efbcd521a86a34c6ec3fd0d14..216dee11ce792c3d08c1f4f79fc5eec67a3206cf 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/blending/Blender.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/blending/Blender.java
@@ -148,7 +148,8 @@ public class Blender {
     private static double heightToOffset(double height) {
         double d = 1.0;
         double e = height + 0.5;
-        double f = Mth.positiveModulo(e, 8.0);
+
+        double f = one.tranic.vine.config.VineConfig.Optimize.floatingPointPositive ? Mth.positiveModuloForPositiveIntegerDivisor(e, 8.0) : Mth.positiveModulo(e, 8.0); // Gale - faster floating-point positive modulo
         return 1.0 * (32.0 * (e - 128.0) - 3.0 * (e - 120.0) * f + 3.0 * f * f) / (128.0 * (32.0 - 3.0 * f));
     }
 
