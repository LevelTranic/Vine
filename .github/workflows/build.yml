name: Vine Server - ver/1.20.6

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    environment: default
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7
      - name: Setup Powershell
        run: |
          wget https://github.com/PowerShell/PowerShell/releases/download/v7.4.5/powershell_7.4.5-1.deb_amd64.deb
          sudo dpkg -i powershell_7.4.5-1.deb_amd64.deb
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Configure Git User Details
        run: git config --global user.email "no-reply@tranic.one" && git config --global user.name "Vine Server"
      - name: Apply Patches
        run: gradle applyPatches
      - name: CreateJar
        run: gradle createMojmapPaperclipJar
      - name: SetENV
        run: pwsh scripts/SetEnv.ps1
      - name: Upload to Mars API
        run: pwsh scripts/create_build.ps1 ${{ env.mcversion }} ${{ secrets.MARS_TOKEN }}
      - name: Upload Artifact
        uses: "actions/upload-artifact@v4"
        with:
          name: "${{ env.project_id_b }} CI Artifacts"
          path: "build/libs/*.jar"
      - name: Create Release
        if: "!contains(github.event.commits[0].message, '[release skip]')"
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ env.tag }}
          name: ${{ env.project_id_b }} ${{ env.mcversion }} - ${{ env.commit_id }}
          body: |
            ðŸ“¦Version: `${{ env.mcversion }}` | Commit ${{ env.commit_id }} [![download](https://img.shields.io/github/downloads/LevelTranic/${{ env.project_id }}/${{ env.tag }}/total?color=red&style=flat-square)](https://github.com/LevelTranic/${{ env.project_id }}/download/${{ env.tag }}/${{ env.jar }})
            This release is automatically compiled by GitHub Actions 
            **You can easily find the latest version in our [build list](https://tranic.one/downloads/all).**
            ### Commit Message
            ${{ env.commit_msg }}
          artifacts: |
            ${{ env.jar_dir }}
          generateReleaseNotes: true
          prerelease: ${{ env.pre }}
          makeLatest: ${{ env.make_latest }}
          token: "${{ secrets.GITHUB_TOKEN }}"